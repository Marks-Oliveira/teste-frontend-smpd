{"version":3,"sources":["pages/LoginPage/styles.js","pages/LoginPage/index.js","components/Header/styles.js","components/Header/index.js","services/api.js","pages/UserSearchPage/styles.js","pages/UserSearchPage/index.js","components/Modal/styles.js","components/Modal/index.js","components/RepositoriesCard/styles.js","components/RepositoriesCard/index.js","pages/RepositoriesPage/styles.js","pages/RepositoriesPage/index.js","components/Routes.js","App.js","index.js"],"names":["Wrapper","styled","div","Container","section","ContainerHeader","Content","Inputs","article","ErrorWarning","Button","LoginPage","useState","login","setLogin","password","setPassword","error","setError","history","useHistory","useEffect","window","localStorage","getItem","loginObj","JSON","parse","replace","Avatar","color","onSubmit","event","preventDefault","loginInfo","setItem","stringify","TextField","value","onChange","e","target","variant","margin","required","fullWidth","label","autoFocus","type","size","header","User","Header","user","useParams","onClick","clear","push","api","axios","create","baseURL","InputUser","LogoGithub","UserInfos","props","visible","UserAvatar","Infos","RepositoriesButton","UserSearchPage","getUser","setGetUser","setUser","pathParams","handleSearchUser","a","get","response","data","status","alert","style","marginTop","src","alt","avatar_url","width","height","name","public_repos","followers","CloseButton","Modal","modalItem","full_name","forks","stargazers_count","RepositoriesCard","reposItem","modalVisible","modal","setModal","language","Cards","RepositoriesPage","divHidden","setDivHidden","repos","setRepos","getRepositories","userGithub","map","item","index","Routes","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEaA,EAAUC,IAAOC,IAAV,4HAOPC,EAAYF,IAAOG,QAAV,qWAmBTC,EAAkBJ,IAAOC,IAAV,wdAuBfI,EAAUL,IAAOC,IAAV,kJAQPK,EAASN,IAAOO,QAAV,yEAKNC,EAAeR,IAAOC,IAAV,uKASZQ,EAAST,IAAOO,QAAV,iJ,mDCmBJG,EAnFG,WAAO,IAAD,EACMC,mBAAS,IADf,mBACbC,EADa,KACNC,EADM,OAEYF,mBAAS,IAFrB,mBAEbG,EAFa,KAEHC,EAFG,OAGMJ,mBAAS,IAHf,mBAGbK,EAHa,KAGNC,EAHM,KAIdC,EAAUC,cAEhBC,qBAAU,WACN,GAAiD,OAA7CC,OAAOC,aAAaC,QAAQ,aAAuB,CACnD,IAAMC,EAAWC,KAAKC,MAAML,OAAOC,aAAaC,QAAQ,cACxDL,EAAQS,QAAR,uBAAgCH,EAASZ,WAE9C,CAACM,EAASN,IAoBb,OACI,cAAC,EAAD,UACI,eAAC,EAAD,WACI,cAAC,EAAD,UACI,yCAEJ,eAAC,EAAD,WACI,cAACgB,EAAA,EAAD,UACI,cAAC,IAAD,CAAkBC,MAAM,gBAExB,cAAC,EAAD,UACI,uBAAMC,SA7BV,SAACC,GAGjB,GAFAA,EAAMC,iBAEQ,UAAVpB,GAAkC,aAAbE,EAAyB,CAC9C,IAAMmB,EAAY,CACdrB,MAAOA,EACPE,SAAUA,GAGdO,OAAOC,aAAaY,QAAQ,YAAaT,KAAKU,UAAUF,IACxDf,EAAQS,QAAR,uBAAgCf,SAEhCK,EAAS,iCACTJ,EAAS,IACTE,EAAY,KAeI,UACI,cAACqB,EAAA,EAAD,CACIC,MAAOzB,EACP0B,SAAU,SAAAC,GAAC,OAAI1B,EAAS0B,EAAEC,OAAOH,QACjCI,QAAQ,WACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,QACNC,WAAS,IAEb,cAACV,EAAA,EAAD,CACIC,MAAOvB,EACPwB,SAAU,SAAAC,GAAC,OAAIxB,EAAYwB,EAAEC,OAAOH,QACpCI,QAAQ,WACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,MAAM,WACNE,KAAK,aAER/B,GAAS,cAAC,EAAD,UAAiBA,IAC3B,cAAC,EAAD,UACI,cAAC,IAAD,CACIyB,QAAQ,YACRG,WAAS,EACTI,KAAK,SACLnB,MAAM,UACNkB,KAAK,SALT,oC,6BCxEvBhD,GAAUC,IAAOiD,OAAV,wQAgBPC,GAAOlD,IAAOO,QAAV,wS,oBCiBF4C,GA3BA,WACX,IAAMjC,EAAUC,cACRiC,EAASC,cAATD,KAOR,OACI,eAAC,GAAD,WACI,eAAC,GAAD,WACI,cAAC,KAAD,CAAmBvB,MAAM,YACzB,+BAAOuB,OAEX,cAAC,IAAD,CACIX,QAAQ,YACRO,KAAK,QACLnB,MAAM,UACNyB,QAfS,WACjBjC,OAAOC,aAAaiC,QACpBrC,EAAQsC,KAAK,MAST,wB,SCjBGC,G,QAJHC,EAAMC,OAAO,CACvBC,QAAS,iCCDE7D,GAAUC,IAAOC,IAAV,kLAQPC,GAAYF,IAAOG,QAAV,4VAmBTC,GAAkBJ,IAAOC,IAAV,gZAoBf4D,GAAY7D,IAAOC,IAAV,qOAYT6D,GAAa9D,IAAOC,IAAV,uOAcV8D,GAAY/D,IAAOG,QAAV,kIAKP,SAAA6D,GAAK,MAAsB,KAAlBA,EAAMC,QAAiB,OAAS,UAG3CC,GAAalE,IAAOC,IAAV,yQAgBVkE,GAAQnE,IAAOC,IAAV,uWAmBLmE,GAAqBpE,IAAOC,IAAV,2HAIhB,SAAA+D,GAAK,MAAsB,KAAlBA,EAAMC,QAAiB,OAAS,UCGzCI,GAlHQ,WAAO,IAAD,EACK1D,mBAAS,IADd,mBAClB2D,EADkB,KACTC,EADS,OAED5D,mBAAS,IAFR,mBAElByC,EAFkB,KAEZoB,EAFY,KAGnBtD,EAAUC,cACVsD,EAAapB,cAEnBjC,qBAAU,WAC2C,OAA7CC,OAAOC,aAAaC,QAAQ,cAC5BL,EAAQsC,KAAK,OAElB,CAACtC,IAEJ,IAAMwD,EAAgB,yCAAG,6BAAAC,EAAA,+EAEMlB,GAAImB,IAAJ,WAAYN,IAFlB,OAEXO,EAFW,OAIjBL,EAAQK,EAASC,MAJA,gDAMS,MAAtB,KAAED,SAASE,OACXC,MAAM,qDAENA,MAAM,iCATO,yDAAH,qDAuBtB,OACI,eAAC,GAAD,WACI,8BAAK,cAAC,GAAD,MACL,eAAC,GAAD,WACI,cAAC,GAAD,UACI,+DAEJ,kCACI,eAAC,GAAD,WACI,cAAC5C,EAAA,EAAD,CACIC,MAAOiC,EACPhC,SAAU,SAAAC,GAAC,OAAIgC,EAAWhC,EAAEC,OAAOH,QACnCI,QAAQ,WACRC,OAAO,SACPM,KAAK,QACLH,MAAM,sBACNC,WAAS,IAEb,cAAC,IAAD,CACIL,QAAQ,YACRO,KAAK,SACLnB,MAAM,YACNyB,QAASoB,EACTO,MAAO,CAAEC,UAAW,OALxB,oBASA,cAAC,IAAD,CACIzC,QAAQ,YACRO,KAAK,SACLnB,MAAM,YACNyB,QAxCC,WACrBiB,EAAW,IACXC,EAAQ,KAuCYS,MAAO,CAAEC,UAAW,OALxB,yBAWE,KAAT9B,EACG,cAAC,GAAD,UACI,qBACI+B,IAAI,2EACJC,IAAI,WAGZ,KAEJ,eAAC,GAAD,CAAanB,QAASb,EAAtB,UACI,cAAC,GAAD,UACI,cAACxB,EAAA,EAAD,CACIuD,IAAK/B,EAAKiC,WACVD,IAAI,SACJH,MAAO,CACHK,MAAO,OACPC,OAAQ,YAIpB,eAAC,GAAD,WACI,+BAAM,+BAAI,2CAAJ,IAA4BnC,EAAKoC,UACvC,+BAAM,+BAAI,sDAAJ,IAAoCpC,EAAKqC,kBAC/C,+BAAM,+BAAI,iDAAJ,IAAkCrC,EAAKsC,qBAGrD,cAAC,GAAD,CAAsBzB,QAASb,EAA/B,SACI,cAAC,IAAD,CACIX,QAAQ,YACRO,KAAK,QACLnB,MAAM,YACNyB,QAzES,WACzBpC,EAAQsC,KAAR,wBAA8Bc,EAA9B,iBAA8CG,EAAWrB,QAoE7C,sCC7GPrD,GAAUC,IAAOC,IAAV,qQAcPC,GAAYF,IAAOC,IAAV,8TAkBT0F,GAAc3F,IAAOC,IAAV,sWAkBXI,GAAUL,IAAOC,IAAV,+FAMPiD,GAAOlD,IAAOC,IAAV,+bA6BJ8D,GAAY/D,IAAOC,IAAV,uWCzDP2F,GA1BD,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAEZ,OACI,cAAC,GAAD,UACI,eAAC,GAAD,WACI,cAAC,GAAD,UACI,yCAEJ,eAAC,GAAD,WACI,eAAC,GAAD,WACI,qBACIV,IAAI,mOACJC,IAAI,SAER,+BAAM,mCAAMS,EAAUC,kBAE1B,eAAC,GAAD,WACI,4BAAG,+BAAI,4CAAJ,IAA6BD,EAAUE,WAC1C,4BAAG,+BAAI,4CAAJ,IAA6BF,EAAUG,kCCpBrDjG,GAAUC,IAAOC,IAAV,2fCwBLgG,GApBU,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAAkB,EAC1BxF,oBAAS,GADiB,mBAC7CyF,EAD6C,KACtCC,EADsC,KAQpD,OACI,eAAC,GAAD,CAAW/C,QANK,WAChB6C,IACAE,GAAUD,IAIV,UACI,6BAAKF,EAAUV,OACf,+BAAOU,EAAUI,WAChBF,EACG,cAAC,GAAD,CAAOP,UAAWK,IAClB,SClBHnG,GAAUC,IAAOC,IAAV,qHAIJ,SAAA+D,GAAK,OAAsB,IAAlBA,EAAMC,QAAmB,SAAW,aAGhDH,GAAa9D,IAAOC,IAAV,0gBAiCVsG,GAAQvG,IAAOG,QAAV,scCsBHqG,GAvDU,WAAO,IAAD,EACO7F,oBAAS,GADhB,mBACpB8F,EADoB,KACTC,EADS,OAED/F,mBAAS,IAFR,mBAEpBgG,EAFoB,KAEbC,EAFa,KAGrB1F,EAAUC,cACVsD,EAAapB,cAEnBjC,qBAAU,WAC2C,OAA7CC,OAAOC,aAAaC,QAAQ,cAC5BL,EAAQsC,KAAK,OAElB,CAACtC,IAEJE,qBAAU,WACNyF,MACD,IAEH,IAAMA,EAAe,yCAAG,6BAAAlC,EAAA,+EAEOlB,GAAImB,IAAJ,WAAYH,EAAWqC,WAAvB,WAFP,OAEVjC,EAFU,OAIhB+B,EAAS/B,EAASC,MAJF,gDAMhBE,MAAM,qCANU,yDAAH,qDAcrB,OACI,eAAC,GAAD,CAAWf,QAASwC,EAApB,UACI,cAAC,GAAD,IACA,eAAC,GAAD,WACI,qBACItB,IAAI,mOACJC,IAAI,SAER,+BAAM,mCAAMX,EAAWqC,mBAE3B,cAAC,GAAD,UACKH,GACGA,EAAMI,KAAI,SAACC,EAAMC,GACb,OAAO,cAAC,GAAD,CAEKf,UAAWc,EACXb,aAAc,WAnB1CO,GAAcD,KAiBmBQ,YC1B1BC,GApBA,WAEb,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAQ,IAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAQ,qBAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAQ,uCAArB,SACE,cAAC,GAAD,YCRKC,OARf,WACE,OACE,mCACE,cAAC,GAAD,OCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.4eda3177.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Container = styled.section`\r\n    width: 30rem;\r\n    height: 22.6rem;\r\n    background: #FFFFFF;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    position: relative;\r\n\r\n    @media(max-width: 1080px) {        \r\n        width: 50%;\r\n        height: 44.5%;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        width: 80%;\r\n        height: 44.2%;\r\n    }\r\n`\r\n\r\nexport const ContainerHeader = styled.div`\r\n    position: absolute;\r\n    background: #000000;\r\n    width: 100%;\r\n    height: 50px;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    color: #FFFFFF;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    h2 {\r\n        @media(max-width: 1080px) {\r\n            font-size: 1.3rem;\r\n        }\r\n        \r\n        @media(max-width: 720px) {\r\n            font-size: 1.2rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const Content = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 70px; \r\n`\r\n\r\nexport const Inputs = styled.article`\r\n    margin-top: 10px;\r\n    padding: 0 25px;\r\n`\r\n\r\nexport const ErrorWarning = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    color: red;\r\n    font-size: 0.8rem;\r\n`;\r\n\r\nexport const Button = styled.article`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 16px;\r\n`","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport * as S from './styles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst LoginPage = () => {\r\n    const [login, setLogin] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (window.localStorage.getItem(\"loginInfo\") !== null) {\r\n            const loginObj = JSON.parse(window.localStorage.getItem(\"loginInfo\"));\r\n            history.replace(`/search/user/${loginObj.login}`);\r\n        }\r\n    }, [history, login])\r\n\r\n    const handleLogin = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (login === \"admin\" && password === \"password\") {\r\n            const loginInfo = {\r\n                login: login,\r\n                password: password\r\n            };\r\n\r\n            window.localStorage.setItem(\"loginInfo\", JSON.stringify(loginInfo));\r\n            history.replace(`/search/user/${login}`);\r\n        } else {\r\n            setError(\"Login ou senha inválido(s)\");\r\n            setLogin(\"\");\r\n            setPassword(\"\");\r\n        };\r\n    };\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Container>\r\n                <S.ContainerHeader>\r\n                    <h2>Login</h2>\r\n                </S.ContainerHeader>\r\n                <S.Content>\r\n                    <Avatar>\r\n                        <LockOutlinedIcon color='secondary'/>\r\n                    </Avatar>\r\n                        <S.Inputs>\r\n                            <form onSubmit={handleLogin}>\r\n                                <TextField\r\n                                    value={login}\r\n                                    onChange={e => setLogin(e.target.value)}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    label=\"Login\"\r\n                                    autoFocus\r\n                                />\r\n                                <TextField\r\n                                    value={password}\r\n                                    onChange={e => setPassword(e.target.value)}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                />\r\n                                {error && <S.ErrorWarning>{error}</S.ErrorWarning>}\r\n                                <S.Button>\r\n                                    <Button \r\n                                        variant=\"contained\" \r\n                                        fullWidth\r\n                                        size=\"medium\" \r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                    >\r\n                                        Entrar\r\n                                    </Button>\r\n                                </S.Button>\r\n                            </form>\r\n                        </S.Inputs>\r\n                </S.Content>\r\n            </S.Container>\r\n        </S.Wrapper>\r\n    );\r\n}\r\n\r\nexport default LoginPage;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.header`\r\n    width: 100vh;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    padding: 20px;\r\n\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n\r\n    @media(max-width: 1080px) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const User = styled.article `\r\n    width: 10%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-right: 3rem;\r\n\r\n    span {\r\n        margin-bottom: 5px;\r\n        margin-left: 4px;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        margin-right: 1.5rem;\r\n    }\r\n`","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport * as S from './styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst Header = () => {\r\n    const history = useHistory();\r\n    const { user } = useParams();\r\n\r\n    const handleLogout = () => {\r\n        window.localStorage.clear()\r\n        history.push(\"/\")\r\n    };\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <S.User>\r\n                <AccountCircleIcon color=\"primary\" />\r\n                <span>{user}</span>\r\n            </S.User>\r\n            <Button \r\n                variant=\"contained\"\r\n                size=\"small\" \r\n                color=\"primary\"\r\n                onClick={handleLogout}\r\n            >\r\n                Logout\r\n            </Button>\r\n        </S.Wrapper>\r\n    );\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.github.com/users',\r\n});\r\n\r\nexport default api;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    height: 100vh;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\nexport const Container = styled.section`\r\n    width: 30rem;\r\n    height: 22.8rem;\r\n    background: #FFFFFF;\r\n    border: 1px solid black;\r\n    border-radius: 10px;\r\n    display: flex;\r\n    flex-direction: column; \r\n\r\n    @media(max-width: 1080px) {\r\n        width: 55%;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        width: 80%;\r\n        height: 50%;\r\n    }\r\n`\r\n\r\nexport const ContainerHeader = styled.div`\r\n    background: #000000;\r\n    width: 100%;\r\n    height: 50px;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n    color: #FFFFFF;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n    @media(max-width: 1080px) {\r\n        font-size: .8rem;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        font-size: .7rem;\r\n    }\r\n`\r\n\r\nexport const InputUser = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n\r\n    @media(max-width: 720px) {\r\n        padding: 0 .5rem;\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nexport const LogoGithub = styled.div`\r\n    height: 60%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: .8rem;\r\n\r\n    img {\r\n        width: 30%;\r\n        height: 65%;\r\n        opacity: .3;\r\n    }\r\n`\r\n\r\nexport const UserInfos = styled.section`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    display: ${props => props.visible !== \"\" ? 'flex' : 'none'};\r\n`\r\n\r\nexport const UserAvatar = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    @media(max-width: 1080px) {\r\n        width: 50%;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        width: 60%;\r\n    }\r\n`\r\n\r\nexport const Infos = styled.div`\r\n    width: 50%;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding-left: 1rem;\r\n\r\n    span {\r\n        padding: .5rem 0;\r\n        font-size: 1.1rem;\r\n\r\n        @media(max-width: 720px) {\r\n            font-size: .7rem;\r\n            padding-right: .1rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const RepositoriesButton = styled.div`\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    padding: .8rem 1rem;\r\n    display: ${props => props.visible !== \"\" ? 'flex' : 'none'};\r\n`\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\nimport Header from '../../components/Header';\r\nimport api from '../../services/api';\r\n\r\nimport * as S from './styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst UserSearchPage = () => {\r\n    const [getUser, setGetUser] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n    const history = useHistory();\r\n    const pathParams = useParams();\r\n\r\n    useEffect(() => {\r\n        if (window.localStorage.getItem(\"loginInfo\") === null) {\r\n            history.push(\"/\");\r\n        };\r\n    }, [history]);\r\n\r\n    const handleSearchUser = async () => {\r\n        try {\r\n            const response = await api.get(`/${getUser}`);\r\n      \r\n            setUser(response.data);\r\n        } catch(e) {\r\n            if (e.response.status === 404) {\r\n                alert(\"Usuário não encontrado, digite corretamente\");\r\n            } else {\r\n                alert(\"Falha ao pesquisar usuário\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleClearField = () => {\r\n        setGetUser(\"\");\r\n        setUser(\"\");\r\n    };\r\n\r\n    const goToRepositoriesPage = () => {\r\n        history.push(`/repositories/${getUser}/user/${pathParams.user}`);\r\n    };\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <div><Header /></div>\r\n            <S.Container>\r\n                <S.ContainerHeader>\r\n                    <h3>Buscar usuário no Github</h3>\r\n                </S.ContainerHeader>\r\n                <section>\r\n                    <S.InputUser>\r\n                        <TextField\r\n                            value={getUser}\r\n                            onChange={e => setGetUser(e.target.value)}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            size=\"small\"\r\n                            label=\"Busca de usuário\"\r\n                            autoFocus\r\n                        />\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            size=\"medium\" \r\n                            color=\"secondary\"\r\n                            onClick={handleSearchUser}\r\n                            style={{ marginTop: '8px' }}\r\n                        >\r\n                            Buscar\r\n                        </Button>\r\n                        <Button \r\n                            variant=\"contained\"\r\n                            size=\"medium\" \r\n                            color=\"secondary\"\r\n                            onClick={handleClearField}\r\n                            style={{ marginTop: '8px' }}\r\n                        >\r\n                            Limpar\r\n                        </Button>\r\n                    </S.InputUser>\r\n                </section>\r\n                {user === \"\" ? (\r\n                    <S.LogoGithub>\r\n                        <img \r\n                            src=\"https://cdn0.iconfinder.com/data/icons/octicons/1024/mark-github-512.png\" \r\n                            alt=\"logo\"\r\n                        />\r\n                    </S.LogoGithub> \r\n                ) : null\r\n                }\r\n                <S.UserInfos visible={user}>\r\n                    <S.UserAvatar>\r\n                        <Avatar \r\n                            src={user.avatar_url}\r\n                            alt=\"Avatar\" \r\n                            style={{ \r\n                                width: \"8rem\",\r\n                                height: \"8rem\"\r\n                            }}\r\n                        />\r\n                    </S.UserAvatar>\r\n                    <S.Infos>\r\n                        <span><em><strong>Nome:</strong> {user.name}</em></span>\r\n                        <span><em><strong>Repositórios:</strong> {user.public_repos}</em></span>\r\n                        <span><em><strong>Seguidores:</strong> {user.followers}</em></span>\r\n                    </S.Infos>\r\n                </S.UserInfos>\r\n                <S.RepositoriesButton visible={user}>\r\n                    <Button \r\n                        variant=\"contained\"\r\n                        size=\"small\" \r\n                        color=\"secondary\"\r\n                        onClick={goToRepositoriesPage}\r\n                    >\r\n                        Repositórios\r\n                    </Button>\r\n                </S.RepositoriesButton>\r\n            </S.Container>\r\n        </S.Wrapper>\r\n    );\r\n}\r\n\r\nexport default UserSearchPage;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 100%;\r\n    height: 100vh;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 99;\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n    \r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    width: 35%;\r\n    height: 20%;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n\r\n    @media(max-width: 1080px) {\r\n        width: 44%;\r\n        height: 8.5rem;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        width: 60%;\r\n        height: 7rem;\r\n        font-size: .7rem;\r\n    }\r\n`\r\n\r\nexport const CloseButton = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n\r\n    button {\r\n        background-color: transparent;\r\n        border: none;\r\n        outline: none;\r\n        width: 2rem;\r\n        height: 2rem;\r\n        font-size: 1rem;\r\n        font-weight: bold;\r\n        color: #0077c1;\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nexport const Content = styled.div`\r\n    height: 80%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\n\r\nexport const User = styled.div`\r\n    width: 80%;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-left: 1rem;\r\n\r\n    img {\r\n        width: 6%;\r\n        height: 100%;\r\n        border-radius: 80px;\r\n    }\r\n\r\n    span {\r\n        margin-left: .2rem;\r\n    }\r\n\r\n    @media(max-width: 1080px) {\r\n        img {\r\n            width: 1.2rem;\r\n        }\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        img {\r\n            width: 1rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const UserInfos = styled.div`\r\n    width: 90%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-left: 1.5rem;\r\n    margin-bottom: 1rem;\r\n\r\n    p {\r\n        margin: 0 2rem;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        margin-left: 1rem;\r\n\r\n        p {\r\n            margin: 0 1rem;\r\n        }\r\n    }\r\n`","import React from 'react';\r\n\r\nimport * as S from './styles';\r\n\r\nconst Modal = ({modalItem}) => {\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <S.Container>\r\n                <S.CloseButton>\r\n                    <button>X</button>\r\n                </S.CloseButton>\r\n                <S.Content>\r\n                    <S.User>\r\n                        <img \r\n                            src=\"https://camo.githubusercontent.com/d3563008ac544a830a26cd54e8add19decb3299ef11712c071b44c8d01ec8ac2/68747470733a2f2f63646e332e69636f6e66696e6465722e636f6d2f646174612f69636f6e732f696e6669636f6e732f3531322f6769746875622e706e67\" \r\n                            alt=\"logo\"\r\n                        />\r\n                        <span><em>/{modalItem.full_name}</em></span>\r\n                    </S.User>\r\n                    <S.UserInfos>\r\n                        <p><em><strong>Forks:</strong> {modalItem.forks}</em></p>\r\n                        <p><em><strong>Stars:</strong> {modalItem.stargazers_count}</em></p>\r\n                    </S.UserInfos>\r\n                </S.Content>\r\n            </S.Container>\r\n        </S.Wrapper>\r\n    );\r\n}\r\n\r\nexport default Modal;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 20rem;\r\n    height: 7rem;\r\n    background: #FFFFFF;\r\n    border-radius: 5px;\r\n    box-shadow: 2px 2px 10px #888888;\r\n    margin: .5rem 0;\r\n    cursor: pointer;\r\n    \r\n    h4 {\r\n        margin-left: 1.2rem;\r\n        color: #0077c1;\r\n    }\r\n\r\n    span {\r\n        margin-left: 1.2rem;\r\n    }\r\n\r\n    @media(max-width: 1080px) {\r\n        width: 48%;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        width: 100%;\r\n        height: 4.8rem;\r\n        font-size: .7rem;\r\n    }\r\n`","import React, { useState } from 'react';\r\n\r\nimport Modal from '../Modal';\r\n\r\nimport * as S from './styles';\r\n\r\nconst RepositoriesCard = ({reposItem, modalVisible}) => {\r\n    const [modal, setModal] = useState(false);\r\n\r\n    const handleModal = () => {\r\n        modalVisible();\r\n        setModal(!modal);\r\n    };\r\n\r\n    return (\r\n        <S.Wrapper onClick={handleModal}>\r\n            <h4>{reposItem.name}</h4>\r\n            <span>{reposItem.language}</span>\r\n            {modal ? (\r\n                <Modal modalItem={reposItem} />\r\n            ) : null\r\n            }\r\n        </S.Wrapper>\r\n    );\r\n}\r\n\r\nexport default RepositoriesCard;\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: ${props => props.visible === true ? 'hidden' : 'visible'};\r\n`\r\n\r\nexport const LogoGithub = styled.div`\r\n    padding: 5rem 4rem 0;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    img {\r\n        width: 2.5%;\r\n        height: 100%;\r\n        border-radius: 80px;\r\n    }\r\n\r\n    span {\r\n        padding-left: 5px;\r\n        font-size: 1.2rem;\r\n    }\r\n\r\n    @media(max-width: 1080px) {\r\n        font-size: .8rem;\r\n\r\n        img {\r\n            width: 1.5rem;\r\n        }\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        font-size: .6rem;\r\n\r\n        img {\r\n            width: 1.5rem;\r\n        }\r\n    }\r\n`\r\n\r\nexport const Cards = styled.section`\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-between;\r\n\r\n    width: 91%;\r\n    margin: 0 4rem;\r\n    margin-top: 1rem;\r\n    padding-bottom: 2rem;\r\n\r\n    @media(max-width: 1080px) {\r\n        width: 100%;\r\n        margin: 0;\r\n        padding: 0 4rem;\r\n    }\r\n\r\n    @media(max-width: 720px) {\r\n        width: 100%;\r\n        margin: 0;\r\n        padding: 0 4rem;\r\n        justify-content: center;\r\n    }\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from \"react-router\";\r\n\r\nimport api from '../../services/api';\r\nimport Header from '../../components/Header';\r\nimport RepositoriesCard from '../../components/RepositoriesCard';\r\n\r\nimport * as S from './styles';\r\n\r\nconst RepositoriesPage = () => {\r\n    const [divHidden, setDivHidden] = useState(false);\r\n    const [repos, setRepos] = useState(\"\");\r\n    const history = useHistory();\r\n    const pathParams = useParams();\r\n\r\n    useEffect(() => {\r\n        if (window.localStorage.getItem(\"loginInfo\") === null) {\r\n            history.push(\"/\");\r\n        };\r\n    }, [history]);\r\n\r\n    useEffect(() => {\r\n        getRepositories();\r\n    }, []);\r\n\r\n    const getRepositories = async () => {\r\n        try {\r\n            const response = await api.get(`/${pathParams.userGithub}/repos`);\r\n      \r\n            setRepos(response.data);\r\n        } catch(e) {\r\n            alert(\"Falha ao carregar repositórios\");\r\n        }\r\n    };\r\n\r\n    const modalVisible = () => {\r\n        setDivHidden(!divHidden);\r\n    };\r\n\r\n    return (\r\n        <S.Wrapper visible={divHidden}>\r\n            <Header />\r\n            <S.LogoGithub>\r\n                <img \r\n                    src=\"https://camo.githubusercontent.com/d3563008ac544a830a26cd54e8add19decb3299ef11712c071b44c8d01ec8ac2/68747470733a2f2f63646e332e69636f6e66696e6465722e636f6d2f646174612f69636f6e732f696e6669636f6e732f3531322f6769746875622e706e67\" \r\n                    alt=\"logo\"\r\n                />\r\n                <span><em>/{pathParams.userGithub}</em></span>\r\n            </S.LogoGithub> \r\n            <S.Cards>\r\n                {repos && \r\n                    repos.map((item, index) => {\r\n                        return <RepositoriesCard \r\n                                    key={index} \r\n                                    reposItem={item}\r\n                                    modalVisible={() => modalVisible()}\r\n                                />\r\n                    })\r\n                }\r\n            </S.Cards>\r\n        </S.Wrapper>\r\n    );\r\n}\r\n\r\nexport default RepositoriesPage;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport LoginPage from \"../pages/LoginPage\";\r\nimport UserSearchPage from \"../pages/UserSearchPage\";\r\nimport RepositoriesPage from \"../pages/RepositoriesPage\";\r\n\r\nconst Routes = () => {\r\n  \r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path = {\"/\"}>\r\n          <LoginPage />\r\n        </Route>\r\n        <Route exact path = {\"/search/user/:user\"}>\r\n          <UserSearchPage />\r\n        </Route>\r\n        <Route exact path = {\"/repositories/:userGithub/user/:user\"}>\r\n          <RepositoriesPage />\r\n        </Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport Routes from './components/Routes'\n\nfunction App() {\n  return (\n    <>\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}